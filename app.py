import streamlit as st
import os
from utils.clustering_comments_dbscan import *  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏–∏
from utils.search_notebooks import *  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–æ—É—Ç–±—É–∫–∞–º

st.title("–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ç–∞–±–ª–∏—Ü")
# –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –Ω–∞ –≤–∫–ª–∞–¥–∫–∏
tab1, tab2 = st.tabs(["–ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤", "–ü–æ–∏—Å–∫ –ø–æ –Ω–æ—É—Ç–±—É–∫–∞–º"])

# --- –ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ ---
with tab1:
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ 
    st.write("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤! üëãüèª")
    st.write("üìÑ –î–ª—è –Ω–∞—á–∞–ª–∞ —Å–∫–∞—á–∞–π—Ç–µ —Ç–∞–±–ª–∏—Ü—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Excel (.xlsx) –Ω–∞ Google –î–∏—Å–∫–µ.")
    st.write("‚¨áÔ∏è –ó–∞–≥—Ä—É–∑–∏—Ç–µ –µ–µ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ, –∏ —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞ –∫–ª–∞—Å—Ç–µ—Ä—ã.")
    uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–∞–±–ª–∏—Ü", type=['xlsx'],accept_multiple_files=False,key="fileUploader")

    if uploaded_file is not None:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –Ω–∞ –¥–∏—Å–∫
        with open(f"./temp/{uploaded_file.name}", "wb") as f:
            f.write(uploaded_file.getbuffer())
        
        # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É
        file_path = f"./temp/{uploaded_file.name}"
        clustered_data = main(file_path, "–°—Ç—É–¥–µ–Ω—Ç", "–ü—Ä–æ–≤–µ—Ä—è—é—â–∏–π", "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if clustered_data is not None:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
            def highlight_tasks_and_clusters(val):
                # –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç '---', –≤—ã–¥–µ–ª—è–µ–º –µ–≥–æ –∫–∞–∫ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
                if '---' in str(val):
                    return 'background-color: #ccffcc;'  # –°–≤–µ—Ç–ª–æ-–∑–µ–ª—ë–Ω—ã–π —Ñ–æ–Ω
                # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω—é—é –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è –∫–ª–∞—Å—Ç–µ—Ä–æ–≤
                return ""  # –û—Å—Ç–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —è—á–µ–π–∫–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            styled_data = clustered_data.style.map(highlight_tasks_and_clusters)

            # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏–∑–∞—Ü–∏—é
            styled_data = clustered_data.style.map(highlight_tasks_and_clusters)

            # –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–≤—Ç–æ—à–∏—Ä–∏–Ω—É –∫ —Å—Ç–æ–ª–±—Ü–∞–º
            col_widths = {
                col: max(clustered_data[col].astype(str).map(len).max(), len(col)) + 5
                for col in clustered_data.columns
            }
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É —Å—Ç–æ–ª–±—Ü–æ–≤
            for col, width in col_widths.items():
                styled_data.set_properties(subset=[col], **{'width': f'{width}ch'})

            st.write("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏–∏:")
            st.table(styled_data)
            
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º DataFrame —Å –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏–µ–π
        else:
            st.write("–û—à–∏–±–∫–∞: –ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –≤–µ—Ä–Ω—É–ª–∞ –¥–∞–Ω–Ω—ã—Ö.")

# --- –ü–æ–∏—Å–∫ –ø–æ –Ω–æ—É—Ç–±—É–∫–∞–º ---
with tab2:
    
    st.write("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞ —Å–ª–æ–≤ –ø–æ Jupyter –Ω–æ—É—Ç–±—É–∫–∞–º üìÇ")
    
    st.write("""**–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –§–ë–ú–§**: –ø—Ä–æ—à–ª—ã–µ –∑–∞–¥–∞–Ω–∏—è –ª–µ–∂–∞—Ç –≤ ThetaHat.–ú–∞—Ç–µ—Ä–∏–∞–ª—ã | NDA | –¥–æ—Å—Ç—É–ø = ph@ds => Phystech@DataScience => **Ph@DS –í–ï–°–ù–ê 2024**""")
    st.write("""**Ph@ds**: –ø—Ä–æ—à–ª—ã–µ –∑–∞–¥–∞–Ω–∏—è –ª–µ–∂–∞—Ç –≤ ThetaHat.–ú–∞—Ç–µ—Ä–∏–∞–ª—ã | NDA | –¥–æ—Å—Ç—É–ø = ph@ds => Phystech@DataScience => **Ph@DS –û–°–ï–ù–¨ 2023**""")

    # –ü—É—Ç—å –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–∞–ø–∫–µ —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏
    index_base_dir = "index"

    st.title("–ü–æ–∏—Å–∫ –ø–æ –Ω–æ—É—Ç–±—É–∫–∞–º")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞–ø–∫–∞ —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if os.path.exists(index_base_dir):
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫ –≤–Ω—É—Ç—Ä–∏ `index`
        index_names = [name for name in os.listdir(index_base_dir) if os.path.isdir(os.path.join(index_base_dir, name))]

        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã –ø–æ–¥–∫–∞—Ç–∞–ª–æ–≥–∏, –≤—ã–≤–æ–¥–∏–º –∏—Ö –¥–ª—è –≤—ã–±–æ—Ä–∞
        if index_names:
            selected_index = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É –¥–ª—è –ø–æ–∏—Å–∫–∞", index_names)

            # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∏–Ω–¥–µ–∫—Å—É
            selected_index_path = os.path.join(index_base_dir, selected_index)

            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–∞
            index_searcher = IndexSearcher(selected_index_path)

            # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
            search_word = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞")

            # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
            if st.button("–ò—Å–∫–∞—Ç—å") and search_word:
                results = index_searcher.search(search_word)
                if results:
                    st.write("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:")
                    for path in results:
                        st.write(path)  # –ú–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ —Å—Å—ã–ª–∫—É, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                else:
                    st.write("–°–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

            # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            if st.button("–ó–∞–∫—Ä—ã—Ç—å –ø–æ–∏—Å–∫–æ–≤–∏–∫"):
                index_searcher.close()
                st.write("–ü–æ–∏—Å–∫–æ–≤–∏–∫ –∑–∞–∫—Ä—ã—Ç.")
        else:
            st.warning("–í –ø–∞–ø–∫–µ `index` –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–∞–ø–æ–∫ —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏.")
    else:
        st.error("–ü–∞–ø–∫–∞ `index` –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è.")
